{"name":"jquery.onepage","tagline":"Convert any standard multi-page website into a single page app","body":"# jquery.onepage\r\n\r\nConvert any standard multi-page website into a single page app\r\n\r\n## How it works\r\n\r\nIn the background, whenever a link is clicked, an *AJAX* call is made to the given url. The body and title of the response replaces those of the current page.\r\n\r\n## Usage\r\n\r\nInclude the script *after* you have included jQuery in the *head* of the page. Invoke the *onepage* function.\r\n\r\n```html\r\n<head>\r\n\t<script type=\"text/javascript\" src=\"/path/to/jquery.js\"></script>\r\n\t<script type=\"text/javascript\" src=\"/path/to/jquery.onepage.js\"></script>\r\n\t<script type=\"text/javascript\">\r\n\t\t$.onepage();\r\n\t</script>\r\n</head>\r\n```\r\n\r\n## Configuration\r\n\r\nAn *options* object can be passed into the function\r\n\r\n```js\r\n$.onepage({\r\n\tconfigParameter1: configParameterValue1,\r\n\tconfigParameter2: configParameterValue2,\r\n\t.\r\n\t.\r\n\t.\r\n});\r\n```\r\n\r\nThe following parameters are currently supported:\r\n\r\n### showLoader\r\n\r\nWhether or not a *loader* element must be displayed while waiting for the response of an ajaz request (default: **true**).\r\n\r\n### loaderHtml\r\n\r\nIf *showLoader* is set to true, custom loader html can be set here (default: \"**loadingâ€¦**\").\r\n        \r\n### minLoaderTime (ms)\r\n\r\nThe minimum time that the loader will be displayed. The reasoning behind this is to avoid *flickering* when the response is very quick. The loader also, however, will never show for responses that come back quicker than 100 milliseconds. (default: **500**)\r\n    \r\n### rebind\r\n\r\nCallback function that will always execute after a new page's content has been placed in the *DOM*. Place all existing event bindings in here. (default: function(){})\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}